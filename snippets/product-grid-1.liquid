<style>
  .product-image {
    width: 100%;
    max-height: 250px;
    object-fit: cover;
    border-radius: 25px 25px 0 0;
    margin-bottom: 20px;
    position: relative;
    z-index: 1;
  }
  .product-card {
    position: relative;
    overflow: hidden;
    border-radius: 25px;
    height: 350px !important;
  }

  .add-to-cart-button {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 250px;
    background-color: rgba(255, 255, 255, 0);
    /* 初始透明背景 */
    color: transparent;
    /* 初始透明文字 */
    border: none;
    padding: 0;
    border-radius: 25px 25px 0 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    transition: background-color 0.3s ease
    , color 0.3s ease;
    z-index: 2;
    /* 确保按钮在图像之上 */
  }
  .card:hover .add-to-cart-button {
    background-color: rgba(235, 109, 156, 0.5);
    /* 悬停时的背景颜色 */
    color: white;
    /* 悬停时的文字颜色 */
  }
  .card-body {
    position: relative;
    padding: 0 !important;
  }
  .product-title {
    padding-left: 20px;
    color: #222;
  }
  .product-title:hover {
    color: #EB6D9C !important;
    text-decoration: none;
  }
  .grid-product__price {
    margin: 10px auto 0;
    padding-left: 20px;
  }
</style>

<div class="card mb-3 product-card">
  <div class="card-body">
    <a href="{{ product.url }}">
      <img
        class="product-image"
        src="{{ product.featured_image | img_url: 'large' }}"
        alt="{{ product.title }}">
    </a>
    <a class="product-title" href="{{ product.url }}">{{ product.title }}</a>
    <div class="grid-product__price">
      {{ product.price | money }}
    </div>
  </div>
  <button class="add-to-cart-button" onclick="addToCart('{{ product.variants.first.id }}')">Add To Cart</button>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  function addToCart(variantId) {
    console.log('Adding product with variant ID:', variantId);
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        id: variantId,
        quantity: 1
      })
    }).then(response => response.json())
      .then(data => {
        console.log('Product added to cart:', data);
        // 使用 SweetAlert 显示通知
        Swal.fire({
          icon: 'success',
          title: 'Added to Cart',
          text: 'The product has been added to your cart!',
          showConfirmButton: false,
          timer: 1500
        });

        // 滚动到顶部
        window.scrollTo({ top: 0, behavior: 'smooth' });

        // 更新购物车图标
        updateCartIcon();
      })
      .catch(error => {
        console.error('Error adding product to cart:', error);
        // 使用 SweetAlert 显示错误通知
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Something went wrong! Please try again.',
          showConfirmButton: false,
          timer: 1500
        });
      });
  }

  function updateCartIcon() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const cartItemCount = cart.item_count;
        console.log('Cart item count:', cartItemCount); // 调试信息
        const cartIcon = document.getElementById('cart-icon-bubble');
        if (cartIcon) {
          let htmlContent = '';
          if (cartItemCount === 0) {
            htmlContent += `<span class="svg-wrapper">{{ 'icon-cart-empty.svg' | inline_asset_content }}</span>`;
          } else {
            htmlContent += `<span class="svg-wrapper">{{ 'icon-cart.svg' | inline_asset_content }}</span>`;
            htmlContent += `<span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>`;
            htmlContent += `<div class="cart-count-bubble">`;
            if (cartItemCount < 100) {
              htmlContent += `<span aria-hidden="true">${cartItemCount}</span>`;
            }
            htmlContent += `</div>`;
          }
          cartIcon.innerHTML = htmlContent;
          console.log('Updated cart icon to:', cartItemCount); // 调试信息
        } else {
          console.error('Cart icon element not found'); // 调试信息
        }
      })
      .catch(error => {
        console.error('Error fetching cart data:', error); // 调试信息
      });
  }

  // 初始化购物车图标
  window.addEventListener('load', () => {
    updateCartIcon();
  });
</script>